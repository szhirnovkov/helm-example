---
# Values be passed to the templates

replicaCount: 1

image:
  # Определяет образ
  repository: myrepo/example-my-app
  pullPolicy: IfNotPresent
  # Определяет тег образа
  tag: ""

imagePullSecrets: []

name: example-my-app

serviceAccount:
  # Определяет, создавать ли serviceaccount
  create: true
  # Аннотации, добавляемые к serviceaccount
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::12345678901:role/operator-role
  # Имя для serviceaccount.
  # Если не установлено, а create в значении true, имя будет сгенерировано из названия шаблона
  name: webapp-sa
  labels:
    - frontend
    - web
    - proxy

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: example-my-app-svc
  type: NodePort
  port: 8080
  nodePort: 30080
  protocol: TCP
  targetPort: 8080

environment: development


configMap:
  name: example-my-app-configmap

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
